{
  "version": 3,
  "sources": ["../src/friendlyTime.ts", "../src/index.ts"],
  "sourcesContent": ["export const friendlyTimeEn = (since: Date, onFriendlyTimeChanged: (newTime: string, originalTime: Date) => void) => {\n\tconst msPassed = Date.now() - since.getTime();\n\tconst setFriendlyTimeTo = (newValue: string, msUntilNextCalculation?: number) => {\n\t\tonFriendlyTimeChanged(newValue, since);\n\t\tif (msUntilNextCalculation != null && msUntilNextCalculation > 0) {\n\t\t\tsetTimeout(() => friendlyTimeEn(since, onFriendlyTimeChanged), msUntilNextCalculation);\n\t\t}\n\t}\n\tconst minuteInMs = 60000;\n\tconst hourInMs = 60 * minuteInMs;\n\tconst dayInMs = 24 * hourInMs;\n\tif (msPassed < minuteInMs) {\n\t\tsetFriendlyTimeTo(`seconds ago`, minuteInMs - msPassed);\n\t} else if (msPassed < hourInMs) {\n\t\tconst minutes = Math.floor(msPassed/minuteInMs);\n\t\tsetFriendlyTimeTo(`${minutes} minute${ minutes > 1 ? 's' : ''} ago`, minuteInMs - (msPassed % minuteInMs));\n\t} else if (msPassed < dayInMs) {\n\t\tconst hours = Math.floor(msPassed/hourInMs);\n\t\tsetFriendlyTimeTo(`${hours} hour${ hours > 1 ? 's' : ''} ago`, hourInMs - (msPassed % hourInMs));\n\t} else if (msPassed < 14 * dayInMs) {\n\t\tconst days = Math.floor(msPassed/dayInMs);\n\t\tsetFriendlyTimeTo(`${days} day${ days > 1 ? 's' : ''} ago`, dayInMs - (msPassed % dayInMs));\n\t} else {\n\t\tsetFriendlyTimeTo(since.toLocaleString('en-US', {dateStyle: \"long\",timeStyle: \"short\"}));\n\t}\n}", "import type {Account, CustomEmoji, Status} from \"./MastodonApiV1Entities.ts\";\nimport {friendlyTimeEn} from \"./friendlyTime.ts\"\n\n// Add \"data-hide-root-post\"\n// Finish root post favourites/boosts\n\ntype ClassName =\n\t\"emoji\" |\n\t\"original-poster\" |\n\t\"fediverse-comment\" |\n\t\t\"comment-header\" |\n\t\t\t\"comment-authors-avatar-link\" |\n\t\t\t\t\"comment-authors-avatar\" |\n\t\t\t\"comment-author\" |\n\t\t\t\t\"comment-authors-display-name\" |\n\t\t\t\t\"comment-authors-fediverse-identity\" |\n\t\t\t\t\t\"at-symbol\" |\n\t\t\t\t\t\"username-at-symbol\" |\n\t\t\t\t\t\"comment-authors-fediverse-username\" |\n\t\t\t\t\t\"server-at-symbol\" |\n\t\t\t\t\t\"comment-authors-fediverse-server\" |\n\t\t\"comment-content\" |\n\t\t\"comment-footer\" |\n\t\t\t\"comment-counters\" |\n\t\t\t\t\"comment-counter-favorites\" |\n\t\t\t\t\"comment-counter-reblogs\" |\n\t\t\t\"comment-time\" |\n\t\t\"comment-replies\"\n;\n\ninterface StatusQuery {\n\thost: string;\n\tstatus: string;\n}\n\ninterface ContextResponseJson {\n\tancestors: Status[];\n\tdescendants: Status[];\n}\n\nconst constructElement = <K extends keyof HTMLElementTagNameMap>(\n\ttag: K,\n\t{attributes = {}, classes=[], children=[], ...passThroughParameters}: {\n\t\tattributes?: {[key: string]: string}, // Partial<Record<keyof HTMLElementTagNameMap[K] | \"itemprop\" | \"itemtype\", string>>\n\t\tclasses?: ClassName[],\n\t\tid?: string,\n\t\ttextContent?: string,\n\t\tinnerHTML?: string,\n\t\tchildren?: Node[],\n\t} = {})=> {\n\tconst e = document.createElement<K>(tag);\n\tObject.entries(attributes).forEach( ([key, value]) =>\n\t\te.setAttribute(key, value) );\n\tclasses.forEach( c => e.classList.add(c) );\n\tfor (const attr of [\"id\", \"textContent\", \"innerHTML\"] as const) {\n\t\tconst value = passThroughParameters[attr];\n\t\tif (value != null) {\n\t\t\te[attr] = value;\n\t\t}\n\t}\n\tchildren.forEach( child => e.appendChild(child) );\n\treturn e;\n} \n\nconst emojify = (html: string, emojis: CustomEmoji[]): string => {\n\tlet emojifiedHtml = html;\n\temojis.forEach(emoji => {\n\n\t\tconst source = constructElement(\"source\", {attributes: {\"srcset\": emoji.url, \"media\": \"(prefers-reduced-motion: no-preference)\"}});\n\n\t\tconst img = constructElement(\"img\", {classes: [\"emoji\"], attributes: {\n\t\t\tsrc: emoji.static_url,\n\t\t\talt: `:${ emoji.shortcode }:`,\n\t\t\ttitle: `:${ emoji.shortcode }:`,\n\t\t}});\n\n\t\tconst picture = constructElement(\"picture\", {children: [source, img]});\n\n\t\temojifiedHtml = emojifiedHtml.replace(`:${ emoji.shortcode }:`, picture.outerHTML);\n\t});\n\treturn emojifiedHtml;\n}\n\nconst DataAttributes = ['host', 'status', 'responsesToUrl', 'include', 'exclude', 'max',  'hideRootStatus', 'display'] as const;\ntype RootDataAttribute = NonNullable<(typeof DataAttributes)[number]>;\n\ntype RootElementDataAttributes = Partial<Record<RootDataAttribute, string>>;\n\nconst fetchJson = async <T>(...args: Parameters<typeof fetch>): Promise<T> => {\n\t\tconst response = await fetch(...args);\n\t\tif (!response.ok) {\n\t\t\t\tthrow new Error(response.statusText);\n\t\t}\n\t\treturn await response.json() as T\n}\n\nconst fetchContext = ({host, status}: StatusQuery) =>\n\tfetchJson<ContextResponseJson>(`https://${host}/api/v1/statuses/${status}/context?limit=1`, {});\n\nconst fetchStatus = async ({host, status}: StatusQuery) =>\n\tfetchJson<Status>(`https://${host}/api/v1/statuses/${status}, {});`);\n\nconst fetchRebloggedBy = async ({host, status}: StatusQuery) =>\n\tfetchJson<Account[]>(`https://${host}/api/v1/statuses/:${status}/reblogged_by, {});`);\n\nconst fetchFavouritedBy = async ({host, status}: StatusQuery) =>\n\tfetchJson<Account[]>(`https://${host}/api/v1/statuses/:${status}/favourited_by, {});`);\n\n// Should take query of the form:\n// https://mastodon.social/@MildlyAggrievedScientist/110826278791052494\n// So that users can just paste URLs\nconst urlToStatusQuery = (statusUrl: string): StatusQuery => {\n const {host, pathname} = new URL(statusUrl);\n const status = pathname.split('/')[2] ?? \"\";//.filter( s => s.length > 0 && !s.startsWith('@') );\n return {host, status}\n}\n\nconst fetchOriginalStatusAndReplies= async (statusQuery: StatusQuery | string) => {\n const query = (typeof statusQuery === \"string\") ? urlToStatusQuery(statusQuery) : statusQuery; \n const [original, context] = await Promise.all([fetchStatus(query), fetchContext(query)]);\n return {original, replies: context.descendants};\n}\n\n\ntype ActionAssociatedWithAccount = \"reblogged\" | \"favourited\";\nconst loadAccountsIntoDom = async (rootElement: HTMLElement) => {\nconst [action, url]: [ActionAssociatedWithAccount, string] = rootElement.dataset['rebloggedUrl'] ?\n\t['reblogged', rootElement.dataset['rebloggedUrl']] :\n\trootElement.dataset['favouritedUrl'] ?\n\t\t['favourited', rootElement.dataset['favouritedUrl'] ??\"\"] :\n\t\t(() => {throw new Error(\"no action found\")})();\n\tconst statusQuery =  urlToStatusQuery(url);\n\tconst accounts = await (action === \"reblogged\" ? fetchRebloggedBy(statusQuery) : fetchFavouritedBy(statusQuery));\n\tif (accounts.length == 0) {\n\n\t} else {\n\n\t}\n}\n\nconst renderComments = (comments: Status[], originalPosterAccount: Account) => {\n\tconst topLevelCommentsElements: HTMLElement[] = [];\n\tconst statusIdToRepliesElement = new Map<string, HTMLElement>();\n\tfor (const comment of comments) {\n\t\tconst isOriginalPoster = comment.account.id === originalPosterAccount.id; \n\t\tconst commentAuthorsFediverseHost = new URL(comment.account.url).hostname;\n\n\t\tconst avatarSource = constructElement('source', {attributes: {\n\t\t\t\"srcset\": comment.account.avatar,\n\t\t\t\"media\": \"(prefers-reduced-motion: no-preference)\",\n\t\t}});\n\n\t\tconst avatarImg = constructElement(\"img\", {classes: [\"comment-authors-avatar\"], attributes: {\n\t\t\tsrc: comment.account.avatar_static,\n\t\t\talt: `@${ comment.account.username }@${ commentAuthorsFediverseHost } avatar`,\n\t\t}});\n\n\t\tconst avatarPicture = constructElement(\"picture\", {children: [avatarSource, avatarImg]});\n\t\tconst avatarLink = constructElement(\"a\", { classes: [\"comment-authors-avatar-link\", ...(isOriginalPoster ? [\"original-poster\"] as const : [])], attributes: {\n\t\t\thref: comment.account.url,\n\t\t\trel: \"external nofollow\",\n\t\t\ttitle: `view profile at @${ comment.account.username }@${ commentAuthorsFediverseHost }`,\n\t\t}, children: [avatarPicture]});\n\n\t\tconst usernameAtElement = constructElement(\"span\", {classes: [\"at-symbol\", \"username-at-symbol\"],\n\t\t\ttextContent: `@`\n\t\t})\n\t\tconst serverAtElement = constructElement(\"span\", {classes: [\"at-symbol\", \"server-at-symbol\"],\n\t\t\ttextContent: `@`\n\t\t}) \n\t\tconst usernameElement = constructElement(\"span\", {classes: [\"comment-authors-fediverse-username\"],\n\t\t\ttextContent: comment.account.username\n\t\t})\n\t\tconst serverElement = constructElement(\"span\", {classes: [\"comment-authors-fediverse-server\"],\n\t\t\ttextContent: commentAuthorsFediverseHost\n\t\t})\n\n\t\tconst displayNameElement = constructElement(\"span\", {classes: [\"comment-authors-display-name\"], innerHTML: emojify(comment.account.display_name, comment.account.emojis), attributes: {\n\t\t\titemprop: \"author\",\n\t\t\titemtype: \"http://schema.org/Person\",\n\t\t}});\n\n\t\tconst fediverseIdentityElement = constructElement(\"a\", {classes: [\"comment-authors-fediverse-identity\", ...(isOriginalPoster ? [\"original-poster\"] as const : [])],\n\t\t\tattributes: {\n\t\t\t\thref: comment.account.url,\n\t\t\t\ttitle: `@${ comment.account.username }@${ commentAuthorsFediverseHost }`,\n\t\t\t\trel: \"external nofollow\",\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tusernameAtElement, usernameElement, serverAtElement, serverElement\n\t\t\t]\t\n\t\t});\n\n\t\tconst authorElement = constructElement(\"div\", {\n\t\t\tclasses: [\"comment-author\"],\n\t\t\tchildren: [displayNameElement, fediverseIdentityElement]\n\t\t});\n\n\t\tconst headerElement = constructElement(\"header\", {classes: [\"comment-header\"], children: [avatarLink, authorElement]});\n\n\t\tconst originalStatusLink = constructElement(\"a\", {\n\t\t\ttextContent: \"original post\",\n\t\t\tattributes: {\n\t\t\t\thref: comment.url ?? \"\",\n\t\t\t\titemprop: \"url\",\n\t\t\t\ttitle: `view at ${ commentAuthorsFediverseHost }`,\n\t\t\t\trel: \"external nofollow\",\t\t\n\t\t}});\n\n\n\t\t// copy the content element (non-sanitized, since we're trusting the host server to sanitize it)\n\t\t// if we wanted to sanitize, we could use the [HTML Sanitizer API](https://wicg.github.io/sanitizer-api/),\n\t\t// or [DOMPurify](https://github.com/cure53/DOMPurify/) until there is full browser support for the\n\t\t// the sanitizer API.\n\t\tconst mainContentElement = constructElement(\"main\", {classes: [\"comment-content\"], innerHTML: emojify(comment.content, comment.emojis), attributes: {\n\t\t\titemprop: \"text\",\n\t\t}});\n\n\n\t\tconst timestamp = constructElement(\"time\", {\n\t\t\tclasses: [\"comment-time\"],\n\t\t\tattributes: {dateTime: comment.created_at},\n\t\t\ttextContent: new Date( comment.created_at ).toLocaleString('en-US', {dateStyle: \"long\",timeStyle: \"short\"})\n\t\t})\n\t\tfriendlyTimeEn(new Date( comment.created_at ), (friendlyTimeStr) => {\n\t\t\ttimestamp.textContent = friendlyTimeStr;\n\t\t});\n\n\t\tconst counters = constructElement(\"span\", {\n\t\t\tclasses: [\"comment-counters\"],\n\t\t\tchildren: [\n\t\t\t\t...(comment.reblogs_count > 0 ? [\n\t\t\t\t\tconstructElement(\"a\", {\n\t\t\t\t\t\tclasses: [\"comment-counter-reblogs\"],\n\t\t\t\t\t\ttextContent: `${ comment.reblogs_count}`,\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\thref: `${ comment.url }/reblogs`,\n\t\t\t\t\t\t\ttitle: `Reblogs reported by ${ commentAuthorsFediverseHost }`,\t\n\t\t\t\t\t}})\n\t\t\t\t] : []),\n\t\t\t\t...(comment.favourites_count > 0 ? [\n\t\t\t\t\tconstructElement(\"a\", {\n\t\t\t\t\t\tclasses: [\"comment-counter-favorites\"],\n\t\t\t\t\t\ttextContent: `${ comment.favourites_count}`,\n\t\t\t\t\t\tattributes: {\n\t\t\t\t\t\t\thref: `${ comment.url }/favourites`,\n\t\t\t\t\t\t\ttitle: `Favorites reported by ${ commentAuthorsFediverseHost }`,\t\n\t\t\t\t\t}})\n\t\t\t\t] : [])\n\t\t\t],\n\t\t})\n\n\t\tconst footerElement = constructElement(\"footer\", {classes:[\"comment-footer\"],\n\t\t\tchildren: [\n\t\t\t\tcounters,\n\t\t\t\toriginalStatusLink,\n\t\t\t\ttimestamp\n\t\t\t],\n\t\t});\n\n\n\t\tconst repliesContainer = constructElement(\"div\", {classes: [\"comment-replies\"]});\n\t\tstatusIdToRepliesElement.set(comment.id, repliesContainer);\n\n\t\tconst commentElement = constructElement(\"article\", {\n\t\t\tid: `comment-${ comment.id }`,\n\t\t\tclasses: [\"fediverse-comment\", ...(isOriginalPoster ? [\"original-poster\"] as const : [])],\n\t\t\tattributes: {\n\t\t\t\titemprop: \"comment\",\n\t\t\t\titemtype: \"http://schema.org/Comment\",\t\t\n\t\t\t},\n\t\t\tchildren: [headerElement, mainContentElement, footerElement, repliesContainer]\n\t\t});\n\n\t\tconst replyBlock = comment.in_reply_to_id != null ? statusIdToRepliesElement.get(comment.in_reply_to_id) : undefined;\n\t\tif (replyBlock) {\n\t\t\treplyBlock.appendChild(commentElement);\n\t\t} else {\n\t\t\ttopLevelCommentsElements.push(commentElement);\n\t\t}\n\t}\n\treturn topLevelCommentsElements;\n}\n\n\n/**\n * \n * @param rootCommentElement \n * @returns \n * \n * Uses node.clone to create each comment, so inline event listeners on those comments (onclick=\"...\") will be copied,\n * but event listeners added via addEventListener() will not.  One could add those after the fact by querying all\n * the comments. \n */\nconst loadCommentsIntoDom = async (rootCommentElement: HTMLElement) => {\n\t// extra data from data attributes\n\tconst dataAttributes = ((rootCommentElement as HTMLElement)?.dataset ?? {}) as RootElementDataAttributes;\n\tconst includeSet = new Set<string>((dataAttributes.include ?? \"\").split(',').map(e => e.trim()));\n\tconst excludeSet = new Set<string>((dataAttributes.exclude ?? \"\").split(',').map(e => e.trim()));\n\tconst maxResponses = parseInt(dataAttributes.max ?? \"\");\n\tconst statusUrl = dataAttributes[\"responsesToUrl\"];\n\tconst {host, status} =  statusUrl != null ? urlToStatusQuery(statusUrl) : dataAttributes;\n\n\t// ensure there is at least a host and status, either from data-host/data-status or extracted from data-responses-to-url\n\tif (host == null || status == null) return;\n\n\t// filter excluded responses out\n\tconst {original, replies} = await fetchOriginalStatusAndReplies({host, status});\n\n\tconst comments = [original, \n\t\t...replies.filter( r => {\n\t\t\tif (excludeSet.has(r.id)) {\n\t\t\t\treturn false;\n\t\t\t} else if (r.in_reply_to_id != null && excludeSet.has(r.in_reply_to_id)) {\n\t\t\t\t// descendants of excluded posts should also be excluded.\n\t\t\t\texcludeSet.add(r.id);\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t})\n\t];\n\t\n\t// filter out responses that exceed length limit (though scrolling is recommended instead)\n\tif (!isNaN(maxResponses)) {\n\t\tfor (var i = comments.length-1; i > 0 && comments.length > maxResponses; i--) {\n\t\t\tif (!includeSet.has(comments[i].id)) {\n\t\t\t\tcomments.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst topLevelCommentElements = renderComments(comments, original.account);\n\ttopLevelCommentElements.forEach( commentElement => rootCommentElement.appendChild(commentElement) );\n}\n\nconst findCommentTemplatesAndLoadCommentsIntoDom = () => {\n\tconst commentElements = document.querySelectorAll('[data-host][data-status], [data-responses-to-url]');\n\tfor (const templateElement of commentElements) {\n\t\tif (templateElement instanceof HTMLElement) {\n\t\t\tloadCommentsIntoDom(templateElement);\n\t\t}\n\t}  \n}\n\ndocument.addEventListener('DOMContentLoaded', findCommentTemplatesAndLoadCommentsIntoDom);\n"],
  "mappings": "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",
  "names": []
}
